[{"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\index.js":"1","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\App.js":"2","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\pages\\Stock.js":"3","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\utils\\firebase-config.js":"4","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\pages\\Stocks.js":"5","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\pages\\Login.js":"6","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\pages\\Home.js":"7","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\pages\\SignUp.js":"8","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\pages\\UserProfile.js":"9","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\authentication\\Auth.js":"10","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\utils\\ProtectedRoutes.js":"11","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\StocksList.js":"12","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\Navigation.js":"13","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\Footer.js":"14","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\Header.js":"15","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\UserInfo.js":"16","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\NavbarUserProfile.js":"17","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\FinanceFeed.js":"18","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\Heading.js":"19","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\Feed.js":"20","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\StockInfoHeader.js":"21","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\StockInfoTable.js":"22","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\StockGraph.js":"23","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\IndicatorSwitcher.js":"24","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\DateSwitcher.js":"25","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\IndLengthSwitcher.js":"26","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\SimulateButton.js":"27","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\EfficiencyInfo.js":"28","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\SaveInDatabaseButton.js":"29","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\calculations\\CalculateSmaSignals.js":"30","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\calculations\\CalculateBollSignals.js":"31","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\calculations\\CalculateSarSignals.js":"32","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\TableSkeleton.js":"33","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\StockListItem.js":"34","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\Pagination.js":"35","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\hooks\\useFetch.js":"36","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\SkeletonRow.js":"37"},{"size":254,"mtime":1673863040300,"results":"38","hashOfConfig":"39"},{"size":1376,"mtime":1672958664027,"results":"40","hashOfConfig":"39"},{"size":6594,"mtime":1683236926714,"results":"41","hashOfConfig":"39"},{"size":643,"mtime":1683237278404,"results":"42","hashOfConfig":"39"},{"size":627,"mtime":1673861844432,"results":"43","hashOfConfig":"39"},{"size":3262,"mtime":1673861812283,"results":"44","hashOfConfig":"39"},{"size":309,"mtime":1672958664082,"results":"45","hashOfConfig":"39"},{"size":3464,"mtime":1673861835023,"results":"46","hashOfConfig":"39"},{"size":593,"mtime":1673861845977,"results":"47","hashOfConfig":"39"},{"size":786,"mtime":1672958664044,"results":"48","hashOfConfig":"39"},{"size":339,"mtime":1672958664093,"results":"49","hashOfConfig":"39"},{"size":2300,"mtime":1683237330077,"results":"50","hashOfConfig":"39"},{"size":1710,"mtime":1673117688800,"results":"51","hashOfConfig":"39"},{"size":432,"mtime":1673117688799,"results":"52","hashOfConfig":"39"},{"size":737,"mtime":1672958664049,"results":"53","hashOfConfig":"39"},{"size":4846,"mtime":1673875415022,"results":"54","hashOfConfig":"39"},{"size":689,"mtime":1672958664057,"results":"55","hashOfConfig":"39"},{"size":1638,"mtime":1673117688798,"results":"56","hashOfConfig":"39"},{"size":325,"mtime":1673117688799,"results":"57","hashOfConfig":"39"},{"size":782,"mtime":1673861707123,"results":"58","hashOfConfig":"39"},{"size":1347,"mtime":1672958664061,"results":"59","hashOfConfig":"39"},{"size":891,"mtime":1673179854705,"results":"60","hashOfConfig":"39"},{"size":4344,"mtime":1673878229764,"results":"61","hashOfConfig":"39"},{"size":1011,"mtime":1672958664056,"results":"62","hashOfConfig":"39"},{"size":868,"mtime":1672958664046,"results":"63","hashOfConfig":"39"},{"size":1060,"mtime":1673277392899,"results":"64","hashOfConfig":"39"},{"size":1545,"mtime":1673134208158,"results":"65","hashOfConfig":"39"},{"size":7415,"mtime":1673223041752,"results":"66","hashOfConfig":"39"},{"size":3884,"mtime":1672958664058,"results":"67","hashOfConfig":"39"},{"size":1438,"mtime":1673222545288,"results":"68","hashOfConfig":"39"},{"size":1439,"mtime":1673222351423,"results":"69","hashOfConfig":"39"},{"size":1510,"mtime":1673222417065,"results":"70","hashOfConfig":"39"},{"size":286,"mtime":1672958664063,"results":"71","hashOfConfig":"39"},{"size":883,"mtime":1683383079167,"results":"72","hashOfConfig":"39"},{"size":580,"mtime":1673186204158,"results":"73","hashOfConfig":"39"},{"size":890,"mtime":1673176933512,"results":"74","hashOfConfig":"39"},{"size":180,"mtime":1672958664060,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"l3h8ik",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\index.js",[],["155","156"],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\App.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\pages\\Stock.js",["157","158"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport Footer from \"../components/Footer\";\r\nimport StockInfoTable from \"../components/StockInfoTable\";\r\nimport StockInfoHeader from \"../components/StockInfoHeader\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport axios from \"axios\";\r\nimport StockGraph from \"../components/StockGraph\";\r\nimport { IndicatorSwitcher } from \"../components/IndicatorSwitcher\";\r\nimport { DateSwitcher } from \"../components/DateSwitcher\";\r\nimport { IndLengthSwitcher } from \"../components/IndLengthSwitcher\";\r\nimport { SimulateButton } from \"../components/SimulateButton\";\r\nimport EfficiencyInfo from \"../components/EfficiencyInfo\";\r\n\r\nconst Stock = () => {\r\n  let { id } = useParams();\r\n  const [data, setData] = useState([]);\r\n  const [indicator, setIndicator] = useState(\"sma\");\r\n  const [indLength, setIndLength] = useState(\"10\");\r\n  const [startDate, setStartDate] = useState(new Date(\"2021-08-08\"));\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [isLoaded, setisLoaded] = useState(false);\r\n  const Api_Token = \"636046181036a1.65629111\";\r\n\r\n  const [stockDataPrices, setStockDataPrices] = useState(\r\n    {\r\n      x: [],\r\n      y: [],\r\n      mode: \"lines\",\r\n      name: \"Price\",\r\n      color: \"rgb(0, 0, 0)\",\r\n    },\r\n  );\r\n  const [stockDataIndicator, setStockDataIndicator] = useState(\r\n    {\r\n      x: [],\r\n      y: [],\r\n      mode: \"lines\",\r\n      name: \"Indicator\",\r\n      color: \"rgb(255, 132, 82)\",\r\n    },\r\n  );\r\n\r\n  const [stockDataIndicatorBands, setStockDataIndicatorBands] = useState(\r\n    {\r\n      x: [],\r\n      y: [],\r\n      mode: \"lines\",\r\n      name: \"Indicator\",\r\n      color: \"rgb(255, 132, 82)\",\r\n    },\r\n  );\r\n\r\n  const [IndicatorBuySignals, setIndicatorBuySignals] = useState(\r\n    {\r\n      x: [],\r\n      y: [],\r\n      mode: 'markers',\r\n      name: \"BUY\",\r\n      color: \"rgb(0, 255, 0)\",\r\n    },\r\n  );\r\n\r\n  const [IndicatorSellSignals, setIndicatorSellSignals] = useState(\r\n    {\r\n      x: [],\r\n      y: [],\r\n      mode: 'markers',\r\n      name: \"SELL\",\r\n      color: \"rgb(255, 0, 0)\",\r\n    },\r\n  );\r\n\r\n\r\n  const getData = async () => {\r\n    const { data } = await axios.get(\r\n      `https://eodhistoricaldata.com/api/real-time/${id}?fmt=json&api_token=${Api_Token}`\r\n    );\r\n    setData(data);\r\n    setisLoaded(true);\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIndicatorBuySignals(\r\n      {\r\n        ...IndicatorBuySignals,\r\n        x: [],\r\n        y: [],\r\n      },\r\n    );\r\n    setIndicatorSellSignals(\r\n      {\r\n        ...IndicatorSellSignals,\r\n        x: [],\r\n        y: [],\r\n      },\r\n    );\r\n  }, [indicator, indLength, startDate, endDate]);\r\n\r\n  \r\n  const {\r\n    code,\r\n    timestamp,\r\n    gmtoffset,\r\n    open,\r\n    high,\r\n    low,\r\n    close,\r\n    volume,\r\n    previousClose,\r\n    change,\r\n    change_p,\r\n  } = data;\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <header className=\"pt-3\">\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col>\r\n              <Row>\r\n                <StockInfoHeader\r\n                  code={code}\r\n                  timestamp={timestamp}\r\n                  gmtoffset={gmtoffset}\r\n                  open={open}\r\n                  high={high}\r\n                  low={low}\r\n                  close={close}\r\n                  colume={volume}\r\n                  previousClose={previousClose}\r\n                  change={change}\r\n                  change_p={change_p}\r\n                  isLoaded={isLoaded}\r\n                />\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={8}>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"pt-2 d-flex shadow-sm justify-content-sm-between bg-white rounded p-2 mb-2 align-items-center gap-2\" style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"700px\" }}>\r\n                    <DateSwitcher\r\n                      startDate={startDate}\r\n                      endDate={endDate}\r\n                      setStartDate={setStartDate}\r\n                      setEndDate={setEndDate}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <StockGraph\r\n                indicator={indicator}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n                indLength={indLength}\r\n                stockDataPrices={stockDataPrices} setStockDataPrices={setStockDataPrices}\r\n                stockDataIndicator={stockDataIndicator} setStockDataIndicator={setStockDataIndicator}\r\n                stockDataIndicatorBands={stockDataIndicatorBands} setStockDataIndicatorBands={setStockDataIndicatorBands}\r\n                IndicatorBuySignals={IndicatorBuySignals}\r\n                IndicatorSellSignals={IndicatorSellSignals}\r\n              />\r\n              <div className=\"pt-3 d-flex shadow-sm justify-content-sm-between bg-white rounded p-3 mb-3 align-items-center gap-3\" style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"700px\" }}>\r\n                <IndicatorSwitcher setIndicator={setIndicator} />\r\n                <IndLengthSwitcher indicator = {indicator} setIndicator={setIndLength} />\r\n                <SimulateButton\r\n                  indicator={indicator}\r\n                  stockDataPrices={stockDataPrices}\r\n                  stockDataIndicator={stockDataIndicator}\r\n                  setIndicatorBuySignals={setIndicatorBuySignals}\r\n                  setIndicatorSellSignals={setIndicatorSellSignals}\r\n                  stockDataIndicatorBands={stockDataIndicatorBands}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Row>\r\n                <StockInfoTable info={data} />\r\n              </Row>\r\n              <Row>\r\n                <EfficiencyInfo\r\n                  startDate={startDate}\r\n                  endDate={endDate}\r\n                  indicator={indicator}\r\n                  indLength={indLength}\r\n                  stock={id}\r\n                  IndicatorBuySignals={IndicatorBuySignals}\r\n                  IndicatorSellSignals={IndicatorSellSignals}\r\n                  stockDataPrices = {stockDataPrices}\r\n                />\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </header>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stock;\r\n","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\utils\\firebase-config.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\pages\\Stocks.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\pages\\Login.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\pages\\Home.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\pages\\SignUp.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\pages\\UserProfile.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\authentication\\Auth.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\utils\\ProtectedRoutes.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\StocksList.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\Navigation.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\Footer.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\Header.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\UserInfo.js",["159"],"import React from \"react\";\r\nimport { useState, useEffect } from 'react';\r\nimport { db, auth } from \"../utils/firebase-config\"\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { query, collection, where, getDocs, deleteDoc, doc } from \"firebase/firestore\";\r\nimport delete_icon from \"../assets/images/delete_icon.svg\";\r\nimport ascending_icon from \"../assets/images/ascending_icon.svg\";\r\nimport descending_icon from \"../assets/images/descending_icon.svg\";\r\nimport { CSVLink } from 'react-csv'\r\n\r\n\r\nconst History = () => {\r\n  const [querySnapshot, setQuerySnapshot] = useState(null);\r\n  const [sortOrder, setSortOrder] = useState(\"ascending\");\r\n  const { lastNotifiedUid } = auth;\r\n  let rows = [];\r\n\r\n\r\n  useEffect(() => {\r\n    getDataFromDatabase();\r\n  }, []);\r\n\r\n  const getDataFromDatabase = async () => {\r\n    const q = query(collection(db, \"efficiency\"),\r\n      where(\"uid\", \"==\", lastNotifiedUid));\r\n    const querySnapshot = await getDocs(q);\r\n    setQuerySnapshot(querySnapshot)\r\n    console.log(querySnapshot);\r\n  };\r\n\r\n  const sortEfficiency = () => {\r\n    let sortedRows = querySnapshot.docs.sort((a, b) => a.data().efficiency - b.data().efficiency);\r\n    if (sortOrder === \"ascending\") {\r\n      sortedRows = sortedRows.reverse();\r\n      setSortOrder(\"descending\");\r\n    } else {\r\n      setSortOrder(\"ascending\");\r\n    }\r\n    setQuerySnapshot({ docs: sortedRows });\r\n  };\r\n\r\n  const deleteFromDatabase = async (id) => {\r\n    const docRef = doc(db, \"efficiency\", id);\r\n    await deleteDoc(docRef);\r\n    getDataFromDatabase();\r\n  }\r\n\r\n  if (querySnapshot && querySnapshot.docs) {\r\n    querySnapshot.docs.map((doc) => {\r\n      const data = doc.data();\r\n      if (data) {\r\n        rows.push({\r\n          stock: data.stock,\r\n          indicator: data.indicator,\r\n          indLength: data.indLength,\r\n          startDate: data.startDate,\r\n          finishDate: data.finishDate,\r\n          basic_efficiency: data.basic_efficiency,\r\n          efficiency: data.efficiency,\r\n        });\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n\r\n  const headers = [\r\n    { label: 'Stock', key: 'stock' },\r\n    { label: 'Indicator', key: 'indicator' },\r\n    { label: 'Indicator Length', key: 'indLength' },\r\n    { label: 'Start Date', key: 'startDate' },\r\n    { label: 'End Date', key: 'finishDate' },\r\n    { label: 'Basic Efficiency', key: 'basic_efficiency' },\r\n    { label: 'Efficiency', key: 'efficiency' },\r\n  ];\r\n\r\n  if (!querySnapshot) {\r\n    return <div>Brak danych w bazie</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex p-3 gap-3 flex-column rounded shadow-sm bg-white mb-5\">\r\n      <h4>Calculated efficiency</h4>\r\n      <div>\r\n        {querySnapshot.docs.length === 0 ? (\r\n          <div>No saved data</div>\r\n        ) : (\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Stock</th>\r\n                <th>Indicator</th>\r\n                <th>Indicator Length</th>\r\n                <th>Start Date</th>\r\n                <th>End Date</th>\r\n                <th>Basic Efficiency</th>\r\n                <th>\r\n                  Efficiency\r\n                  {sortOrder === \"ascending\" ? (\r\n                    <img src={ascending_icon} alt=\"Sort icon\" onClick={sortEfficiency} style={{ cursor: \"pointer\", marginLeft: \"10px\" }} />\r\n                  ) : (\r\n                    <img src={descending_icon} alt=\"Sort icon\" onClick={sortEfficiency} style={{ cursor: \"pointer\", marginLeft: \"10px\" }} />\r\n                  )}\r\n                </th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {querySnapshot.docs.map((doc) => {\r\n                const data = doc.data();\r\n                  return (\r\n                    <tr key={doc.id}>\r\n                      <td>{data.stock}</td>\r\n                      <td>{data.indicator}</td>\r\n                      <td>{data.indLength}</td>\r\n                      <td>{data.startDate}</td>\r\n                      <td>{data.finishDate}</td>\r\n                      <td>{data.basic_efficiency}</td>\r\n                      <td>{data.efficiency}</td>\r\n                      <td style={{ textAlign: \"center\" }}>\r\n                        <img\r\n                          src={delete_icon}\r\n                          alt=\"Remove icon\"\r\n                          onClick={() => {\r\n                            deleteFromDatabase(doc.id);\r\n                          }}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n         { rows.length !== 0 &&\r\n        <CSVLink data={rows} headers={headers} filename=\"efficiency.csv\"> Export to CSV</CSVLink>\r\n      }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\NavbarUserProfile.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\FinanceFeed.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\Heading.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\Feed.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\StockInfoHeader.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\StockInfoTable.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\StockGraph.js",["160"],"import React, { useEffect, useState } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport axios from \"axios\";\r\n\r\nconst StockGraph = (props) => {\r\n  const { indicator, startDate, endDate, indLength, stockDataPrices, setStockDataPrices, stockDataIndicator, \r\n  setStockDataIndicator, stockDataIndicatorBands, setStockDataIndicatorBands, IndicatorBuySignals, IndicatorSellSignals } = props;\r\n  const [isLoaded, setisLoaded] = useState(false);\r\n \r\n\r\n  const Api_Token = '636046181036a1.65629111'\r\n  const StartDate = startDate.toISOString().slice(0, 10);\r\n  const PresentDate = endDate.toISOString().slice(0, 10); \r\n  const StockSymbol = window.location.pathname.split(\"/\").pop().concat(\".US\");\r\n  const FinishDate = PresentDate; \r\n\r\n  const dataPromises = () => {\r\n    setisLoaded(false);\r\n    const API_Call_Indicator = `https://eodhistoricaldata.com/api/technical/${StockSymbol}?order=d&fmt=json&from=${StartDate}&to=${FinishDate}&function=${indicator}&period=${indLength}&api_token=${Api_Token}`;\r\n    const API_Call_Price = `https://eodhistoricaldata.com/api/eod/${StockSymbol}?from=${StartDate}&to=${FinishDate}&period=d&fmt=json&api_token=${Api_Token}`;\r\n\r\n    const getStockPrices = axios.get(API_Call_Price);\r\n    const getIndicatorValues = axios.get(API_Call_Indicator);\r\n\r\n    axios.all([getStockPrices, getIndicatorValues]).then(\r\n      axios.spread((...alldata) => {\r\n        const pricesData = {\r\n          dates: alldata[0].data.map((item) => item.date),\r\n          values: alldata[0].data.map((item) => item.adjusted_close),\r\n        };\r\n        let indicatorData = {};\r\n\r\n        if (indicator === \"sma\") {\r\n          indicatorData = {\r\n            dates: alldata[1].data.map((item) => item.date),\r\n            values: alldata[1].data.map((item) => item.sma),\r\n          };\r\n\r\n          setStockDataIndicatorBands({\r\n            ...stockDataIndicator,\r\n            x: indicatorData.dates,\r\n            y: [],\r\n          });\r\n\r\n          setStockDataIndicator({\r\n            ...stockDataIndicator,\r\n            x: indicatorData.dates,\r\n            y: indicatorData.values,\r\n            name: 'sma',\r\n            mode: 'lines',\r\n          });\r\n        }\r\n        else if (indicator === \"bbands\") {\r\n          indicatorData = {\r\n            dates: alldata[1].data.map((item) => item.date),\r\n            upband: alldata[1].data.map((item) => item.uband),\r\n            lowband: alldata[1].data.map((item) => item.lband),\r\n          };\r\n\r\n          setStockDataIndicator({\r\n            ...stockDataIndicator,\r\n            x: indicatorData.dates,\r\n            y: indicatorData.upband,\r\n            name: 'upBand',\r\n            mode: 'lines',\r\n          });\r\n\r\n          setStockDataIndicatorBands({\r\n            ...stockDataIndicator,\r\n            x: indicatorData.dates,\r\n            y: indicatorData.lowband,\r\n            name: 'lowBand',\r\n            mode: 'lines',\r\n          });\r\n        }\r\n\r\n        else if (indicator === \"sar\") {\r\n          indicatorData = {\r\n            dates: alldata[1].data.map((item) => item.date),\r\n            values: alldata[1].data.map((item) => item.sar),\r\n          };\r\n\r\n          setStockDataIndicatorBands({\r\n            ...stockDataIndicator,\r\n            x: indicatorData.dates,\r\n            y: [],\r\n          });\r\n\r\n          setStockDataIndicator({\r\n            ...stockDataIndicator,\r\n            x: indicatorData.dates,\r\n            y: indicatorData.values,\r\n            name: 'parabolic sar',\r\n            mode: 'markers',\r\n          });\r\n        }\r\n\r\n        setStockDataPrices({\r\n          ...stockDataPrices,\r\n          x: pricesData.dates,\r\n          y: pricesData.values,\r\n          name: 'price',\r\n        });\r\n      })\r\n    );\r\n    setisLoaded(true);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    dataPromises();\r\n  }, [indicator, startDate, endDate, indLength, IndicatorBuySignals, IndicatorSellSignals]);\r\n\r\n  return (\r\n    <>\r\n      {isLoaded ? (\r\n        <Plot\r\n          data={[stockDataPrices, stockDataIndicator, stockDataIndicatorBands, IndicatorBuySignals, IndicatorSellSignals]}\r\n          layout={{ autosize: true }}\r\n          className=\"w-full h-full\"\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"placeholder-glow placeholder\"\r\n          style={{ width: \"700px\", height: \"450px\" }}\r\n        ></div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StockGraph;\r\n","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\IndicatorSwitcher.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\DateSwitcher.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\IndLengthSwitcher.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\SimulateButton.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\EfficiencyInfo.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\SaveInDatabaseButton.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\calculations\\CalculateSmaSignals.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\calculations\\CalculateBollSignals.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\calculations\\CalculateSarSignals.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\TableSkeleton.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\StockListItem.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\Pagination.js",["161"],"import React from \"react\";\r\n\r\nconst Pagination = ({ itemsPerPage, totalItems, setCurrentPage }) => {\r\n  const pages = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n    pages.push(i);\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page, index) => (\r\n          <li key={index} className=\"page-item\">\r\n            <a onClick={() => setCurrentPage(page)} className=\"page-link\">\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\hooks\\useFetch.js",[],"D:\\Pobrane\\trading-app-PS\\trading-app-PS\\src\\components\\SkeletonRow.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":90,"column":6,"nodeType":"168","endLine":90,"endColumn":8,"suggestions":"169"},{"ruleId":"166","severity":1,"message":"170","line":107,"column":6,"nodeType":"168","endLine":107,"endColumn":48,"suggestions":"171"},{"ruleId":"166","severity":1,"message":"172","line":21,"column":6,"nodeType":"168","endLine":21,"endColumn":8,"suggestions":"173"},{"ruleId":"166","severity":1,"message":"174","line":111,"column":6,"nodeType":"168","endLine":111,"endColumn":91,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":15,"column":13,"nodeType":"178","endLine":15,"endColumn":75},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["181"],"React Hook useEffect has missing dependencies: 'IndicatorBuySignals' and 'IndicatorSellSignals'. Either include them or remove the dependency array. You can also do a functional update 'setIndicatorBuySignals(I => ...)' if you only need 'IndicatorBuySignals' in the 'setIndicatorBuySignals' call.",["182"],"React Hook useEffect has a missing dependency: 'getDataFromDatabase'. Either include it or remove the dependency array.",["183"],"React Hook useEffect has a missing dependency: 'dataPromises'. Either include it or remove the dependency array.",["184"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [getData]",{"range":"193","text":"194"},"Update the dependencies array to be: [indicator, indLength, startDate, endDate, IndicatorBuySignals, IndicatorSellSignals]",{"range":"195","text":"196"},"Update the dependencies array to be: [getDataFromDatabase]",{"range":"197","text":"198"},"Update the dependencies array to be: [indicator, startDate, endDate, indLength, IndicatorBuySignals, IndicatorSellSignals, dataPromises]",{"range":"199","text":"200"},[2536,2538],"[getData]",[2814,2856],"[indicator, indLength, startDate, endDate, IndicatorBuySignals, IndicatorSellSignals]",[757,759],"[getDataFromDatabase]",[3775,3860],"[indicator, startDate, endDate, indLength, IndicatorBuySignals, IndicatorSellSignals, dataPromises]"]